<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>