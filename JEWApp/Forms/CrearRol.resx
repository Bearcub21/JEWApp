<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>