<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>