<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>