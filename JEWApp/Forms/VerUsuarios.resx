<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SMPm8wAAAABJRU5ErkJggg==
</value>
  </data>
</root>